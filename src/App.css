p, h1 {
  font: 500 16px / 20px SBSansText, OpenSans, Helvetica Neue, Helvetica, Arial, sans-serif;
}

.functional-header {
  display: flex;
  justify-content: center; /* Центрируем элементы по горизонтали */
  align-items: center; /* Центрируем элементы по вертикали */
  width: 100%;
  position: relative;
  z-index: 1; /* Чтобы элементы отображались поверх картинки */
  padding: 15px 0; /* Отступы сверху и снизу */
  flex: 1;
}

.header-image {
  width: 100%; /* Картинка растягивается на всю ширину */
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1; /* Отправляем на задний план */
}

header h1 {
  position: relative; /* Размещаем текст поверх картинки */
  z-index: 1; /* Текст будет поверх картинки */
  color: white; /* Цвет текста для лучшей видимости */
  text-align: center;
  padding: 20px;
  margin: 0;
}

body {
  overflow: hidden;
  display: flex;
  flex-direction: column;
  height: 100vh;
}

.App {
  display: flex;
  flex-direction: column;
  height: 100vh;
}

.App-header {
  position: relative; /* Для правильного позиционирования верхней линии */
  width: 100%;
}

.header-logo {
  max-width: 100%; /* Оставляем это, чтобы изображение не выходило за пределы родительского контейнера */
  height: auto; /* Сохраняем пропорции */
  max-height: 150px; /* Увеличиваем максимальную высоту */
  margin: 0 auto; /* Центрируем изображение по горизонтали */
}

footer {
  background-color: #171a1e;
  color: white;
  text-align: center;
}

.parent {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  min-width: 500px;
  width: 900px;
  margin: 0 auto;
  padding: 9px;
  
  height: calc(100vh - 50px); /* Высота родителя — 100vh минус высота футера */
  box-sizing: border-box;
}

.child {
  display: flex;
  gap: 0.5rem;
  justify-content: center;
  box-sizing: border-box;
}

.child.buttons {
  flex-shrink: 0; /* Не растягивается */
  flex-direction: row;
  justify-content: center;
  margin-top: 30px;
  gap: 1rem;
  margin: 10px 5% 10px 5%;/* Расстояние между кнопками */
}

.child:not(.tabs-row) {
flex: 1; /* Растягивается */
display: flex;
flex-direction: column;
margin: 10px 5%;
box-sizing: border-box;
}

.button {
  display: flex;
  justify-content: center; /* Центрирование текста по горизонтали */
  align-items: center; /* Центрирование текста по вертикали */
  height: 2.5rem; /* Высота кнопки */
  padding: 0 1rem; /* Отступы по бокам */
  border-radius: 0.5rem;
  font-weight: 500;
  line-height: 2rem; /* Высота строки текста */
  border: none;
  outline: none;
}
  
.button-active {
background-color: rgb(36, 178, 62); /* bg-blue-600 */
color: white;
}

.button-active:hover {
background-color: rgb(28, 109, 43); /* bg-blue-600 */
color: white;
}

.button-inactive {
background-color: rgb(228,235,240); /* bg-gray-200 */
}

.button-inactive:hover {
background-color: rgb(180, 183, 185);
}

.EventsList {
  flex-grow: 1; /* Растягиваем блок, чтобы он занимал оставшееся пространство */
  border-radius: 0.5rem;
  background-color: rgb(242, 245, 247);
  width: 100%;
  height: 500px;
  overflow-y: auto; /* Включаем вертикальную прокрутку */
  padding: 1rem;
  box-sizing: border-box;
}

.event-box {
  width: 80%;
}

.event-content {
  display: flex;
  align-items: center;
}


.events_el_title-box {
  width: 100%;
  display: flex;
  flex-direction: row;
}

.events_el_title-box_name {
  width: 70%;
  text-wrap: nowrap;
  font-weight: bold;
  font-size: large;
  cursor: default;
}

.events_el_title-box_time {
  display: flex;
  align-items: center;
  justify-content: end;
  flex-grow: 1;
  text-align: end;
  cursor: default;
  position: relative;
}

.events_el_title-box_time-block p {
  margin-top: 0;
  margin-bottom: 0;
}

.events_el_title-box_time-block {
  display: flex;
  flex-direction: column;
}

.events_button-container {
  margin: auto;
}

.volunteer__future-events_button {
  width: 95%;
}

.event-item {
  display: flex;
  flex-direction: column;
  background-color: rgb(228, 235, 240);
  padding: 10px 20px;
  margin: 5px 10px;
  border-radius: 0.5rem;
  transition: background-color 0.5s ease, color 0.5s ease;
}

.event-description {
  white-space: nowrap; /* Запрещаем перенос строки */
  overflow: hidden; /* Скрываем переполнение */
  text-overflow: ellipsis; /* Добавляем троеточие в конце */
  color: rgba(61, 49, 49, .9);
  margin: 0;
  cursor: default;
}

  /* Стили для списка событий */
.events-list {
  list-style: none; /* Убираем стандартные маркеры списка */
  padding: 0;
  margin: 0;
}

.event-item:hover {
  background-color: rgb(204, 210, 214);
}

.modal-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5); /* Прозрачный черный фон */
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 10000; /* Модальное окно должно быть поверх остальных элементов */
  opacity: 0; /* Начальная прозрачность */
  pointer-events: none; /* Пока окно не открыто, оно не будет взаимодействовать с другими элементами */
  transition: opacity 0.3s ease; /* Плавное изменение прозрачности */
}

/* Когда окно открыто */
.modal-overlay.open {
  opacity: 1;
  pointer-events: auto; /* Разрешаем взаимодействие с окном */
}

.modal-overlay.closing {
  opacity: 0; /* Когда окно закрывается, оно становится невидимым */
  pointer-events: none; /* Отключаем взаимодействие, когда окно закрывается */
}

.modal-content {
  background-color: white;
  padding: 20px;
  border-radius: 8px;
  width: 100%;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
  transform: translateY(-50px); /* Начальная позиция сверху */
  opacity: 0; /* Начальная прозрачность */
  transition: transform 0.3s ease, opacity 0.3s ease; /* Плавное изменение позиции и прозрачности */
}

.modal-overlay.open .modal-content {
  transform: translateY(0); /* Когда окно открыто, оно появляется */
  opacity: 1; /* Окно становится полностью видимым */
}

.button-container button {
  white-space: nowrap;
  background-color: rgb(37, 210, 69); /* bg-blue-600 */
  color: white;
  border-radius: 0.5rem;
  line-height: 2rem;
  border: none;
  outline: none;
  cursor: pointer;
}

.button-container {
  flex-grow: 1; /* Занимает всё оставшееся пространство */
  display: flex;
  justify-content: flex-end;
  padding: 5px; /* Кнопка прилипает к правому краю */
}

.actions {
  display: flex;
  gap: 16px; /* можно использовать фиксированное расстояние между кнопками */
  justify-content: center;
  align-items: center;/* корректируем сдвиг, чтобы центр был в середине */
}


.modal-header {
  display: flex;
  justify-content: center; /* центрируем по горизонтали */
  align-items: center;      /* центрируем по вертикали */
  margin-bottom: 24px;
}

.modal-header h2 {
  text-align: center;
}

.actions button {
  padding: 10px 20px;
  margin-top: 20px;
  background-color: #36b85f;
  color: white;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  transition: background-color 0.3s ease;
  max-width: 150px;
}

.additional-data {
  font-style: oblique;
  color: rgba(90, 79, 79, 0.9);
  margin: 5px 0 0 0; 
}

/* Стили для чекбоксов */
.checkbox-cell {
  text-align: center;
  vertical-align: middle; /* <== вот это ключевое */
  height: 100%;   
}

.custom-checkbox-wrapper {
  display: inline-block;
  position: relative;
  width: 20px;
  height: 20px;
}

.custom-checkbox-wrapper input[type="checkbox"] {
  opacity: 0;
  width: 0;
  height: 0;
  position: absolute;
}

.custom-checkbox {
  width: 20px;
  height: 20px;
  background-color: white;
  border: 2px solid #666;
  border-radius: 4px;
  box-sizing: border-box;
  transition: background-color 0.2s ease, border-color 0.2s ease;
  cursor: pointer;
  display: inline-block;
  position: relative;
}

.custom-checkbox-wrapper:hover input:not(:checked) + .custom-checkbox {
  border-color: #999;
  background-color: #f3f3f3;
}

.custom-checkbox-wrapper input:checked + .custom-checkbox {
  background-color: rgb(36, 178, 62);
  border-color: rgb(36, 178, 62);
}

.custom-checkbox-wrapper:hover input:checked + .custom-checkbox {
  background-color: #2a8f45;
  border-color: #2a8f45;
}

.custom-checkbox::after {
  content: "";
  position: absolute;
  top: 50%;
  left: 50%;
  width: 5px;
  height: 10px;
  border: solid white;
  border-width: 0 2px 2px 0;
  transform: translate(-50%, -50%) rotate(45deg);
  display: none;
}

.custom-checkbox-wrapper input:checked + .custom-checkbox::after {
  display: block;
}

/* Стили для полосы прокрутки */
.scroll-button {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  z-index: 1;
  background-color: rgba(0, 0, 0, 0.1);
  border: none;
  border-radius: 50%;
  width: 28px;
  height: 28px;
  font-size: 18px;
  cursor: pointer;
  transition: background-color 0.3s ease;
}

.scroll-button:hover {
  background-color: rgba(0, 0, 0, 0.3);
  color: white;
}

.scroll-button.left {
  left: -15px; /* Немного отступаем от левого края */
}

.scroll-button.right {
  right: -15px; /* Немного отступаем от правого края */
}

.tabs-row {
  position: relative;
  width: 87%;
  padding: 0 20px;
  margin: 10px auto;
  display: flex;
  align-items: center;
  box-sizing: border-box;


  flex: initial;
  flex-direction: row;
  height: auto;
}

.tabs-container {
  height: 2.5rem;
  display: flex;
  gap: 0.5rem; /* Расстояние между кнопками */
  justify-content: flex-start; /* Выравниваем кнопки по началу */
  width: 100%;
  overflow-x: hidden; /* Горизонтальная прокрутка */
  scroll-behavior: smooth; /* Плавная прокрутка */
  box-sizing: border-box;
  padding: 0 10px; /* Мелкие отступы по бокам для кнопок */
}

.tabs-container::-webkit-scrollbar {
  height: 8px; /* Высота полосы прокрутки */
}

.tabs-container::-webkit-scrollbar-thumb {
  background-color: rgba(0, 0, 0, 0.2);
  border-radius: 4px;
}

.tab-button {
  white-space: nowrap; /* Убираем перенос строк */
  padding: 0.4rem 1rem; /* Паддинг для кнопок */
  font-size: 14px;
  border: none;
  border-radius: 9999px;
  transition: background-color 0.3s ease;
  cursor: pointer;
  flex-shrink: 0; /* Не сжимаем кнопки */
}